@using ForumManagementSystem.Services;
@using Business.Services.Contracts;
@using AspNetCoreDemo.Models;
@using Microsoft.AspNetCore.Http;
@using Business.QueryParameters;

@model PostSearchModel


@inject ICategoryService categoryService
@inject ITagService tagService

@{
    this.ViewData["Title"] = "World Travel Forum - Posts";
    var isLogged = Context.Session.Keys.Contains("LoggedUser");
    var isBlocked = Context.Session.GetString("IsBlocked");


    var categories = new SelectList(categoryService.GetAll(), "Id", "Name");
    var tags = new SelectList(tagService.GetAll(), "Id", "Name");
}

@{
    var parameters = new Dictionary<string, string>()
            {
                {"Username" , Model.PostQueryParameters.Username },
                {"Tag" , Model.PostQueryParameters.Tag }
            };
}


<div class="body-content">
    <h2>Posts</h2>


    @if (isLogged)
    {
        <form asp-controller="Posts" asp-action="Index" method="get" style="width: 100%;">
            <a asp-controller="Posts" asp-action="Create" class="btn btn-primary">Create New Post</a>
            <span style="font-weight: bold;">Find By User</span>
            <input type="text" name="Username" placeholder="Username">
            <span style="font-weight: bold;">Find By Tag</span>
            <input type="text" name="Tag" placeholder="Tag">
            <input type="submit" value="Search" class="btn btn-primary ml-2">
        </form>

    }

    <br />

    <div class="table-responsive">
        <table class="table table-bordered table-condensed table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Username</th>
                    <th>Title</th>
                    <th class="text-center">Content</th>
                    <th class="text-center">Likes</th>
                    <th class="text-center">Tags</th>
                    <th class="text-center">Actions</th>
                    <th class="text-center">Comments</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var post in Model.Posts)
                    {
                        <tr>
                            <td>@post.CreatedBy.Username</td>
                            <td>@post.Title</td>
                            <td>@post.Content</td>
                            <td class="text-center">
                                <div>
                                    <span>@post.PostLikesCount</span>
                                    | <a asp-controller="Posts" asp-action="Like" asp-route-id="@post.Id" class="btn btn-warning">Like</a>
                                </div>
                            </td>
                            <td>@string.Join(", ", post.PostTags.Select(t => t.Tag.Name))</td>
                            <td class="text-center">
                                <div class="d-flex flex-wrap justify-content-center">
                                    <div class="text-left mb-3">
                                        <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.Id" class="btn btn-primary">View</a>
                                    </div>

                                    <br />

                                    <div class="text-left mb-3">
                                        <a asp-controller="Posts" asp-action="Edit" asp-route-id="@post.Id" class="btn btn-warning">Edit</a>
                                    </div>

                                    <br />

                                    <div class="text-left mb-3">
                                        <a asp-controller="Posts" asp-action="Delete" asp-route-id="@post.Id" class="btn btn-danger">Delete</a>
                                    </div>

                                    <br />

                                </div>
                            </td>
                            <td class="text-center">
                                <div class="d-flex flex-wrap justify-content-center">
                                    <div class="text-left mb-3">
                                        <a asp-controller="Comments" asp-action="Index" asp-route-PostId="@post.Id" class="btn btn-primary">Comments (@post.PostCommentsCount)</a>
                                    </div>

                                    <div class="text-left mb-3">
                                        @if (isBlocked == "False")
                                        {
                                            <a asp-controller="Comments" asp-action="Create" asp-route-id="@post.Id" class="btn btn-primary">New Comment</a>

                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
@{
    string prevButtonState = this.Model.Posts.HasPrevPage ? "" : "disabled";
    string nextButtonState = this.Model.Posts.HasNextPage ? "" : "disabled";
}

<a asp-controller="Posts" asp-action="Index" asp-all-route-data="@parameters" asp-route-PageNumber="@(this.Model.Posts.PageNumber-1)" class="btn btn-link @prevButtonState">Prev</a>
@{
    int currentPageNumber = this.Model.Posts.PageNumber;

    for (int i = 1; i <= this.Model.Posts.TotalPages; i++)
    {
        if (i == currentPageNumber)
        {
            <span>@i</span>
        }
        else
        {
            <span><a asp-controller="Posts" asp-action="Index" asp-all-route-data="@parameters" asp-route-PageNumber="@i">@i</a></span>
        }
    }
}
<a asp-controller="Posts" asp-action="Index" asp-all-route-data="@parameters" asp-route-PageNumber="@(this.Model.Posts.PageNumber+1)" class="btn btn-link @nextButtonState">Next</a>
